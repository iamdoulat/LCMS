
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin or super admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin'];
    }

    // Helper function to check if a user has write permissions (not a viewer)
    function canWrite() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role != 'Viewer';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read their own profile
      allow read: if request.auth.uid == userId;

      // Admins and Super Admins can read any user's profile
      allow get: if isAdmin();
      
      // Allow listing users for admins/super admins
      allow list: if isAdmin();

      // Any authenticated user can update their own profile
      allow update: if request.auth.uid == userId;
      
      // Admins and Super Admins can update any user's profile, including changing roles
      allow update: if isAdmin();
    }
    
    // Rules for general data collections
    match /{collection}/{document=**} {
      // Allow read access for all authenticated users (including Viewer)
      allow read: if request.auth.uid != null;
      
      // Allow write (create, update, delete) access for all authenticated users EXCEPT viewers
      allow write: if request.auth.uid != null && canWrite();
    }
    
  }
}
