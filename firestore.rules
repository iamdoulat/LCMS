
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOneOfRoles(roles) {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return userRole is list ? userRole.hasAny(roles) : userRole in roles;
    }

    function isAdmin() {
      return isOneOfRoles(['Super Admin', 'Admin']);
    }

    function isViewer() {
      return isOneOfRoles(['Viewer']);
    }

    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow get: if request.auth != null && (request.auth.uid == userId || isOneOfRoles(['Super Admin', 'Admin', 'Viewer']));
      allow list: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Viewer']);
      allow update: if request.auth != null && 
                    ( (request.auth.uid == userId && !('role' in request.resource.data)) || 
                      isAdmin() );
      allow delete: if request.auth != null && isOneOfRoles(['Super Admin']);
    }

    match /lc_entries/{lcId} {
      allow read: if request.auth != null && !isOneOfRoles(['User']);
      allow write: if request.auth != null && isAdmin();
    }
    
    match /proforma_invoices/{piId} {
      allow read: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Viewer', 'Store Manager']);
      allow write: if request.auth != null && isAdmin();
    }

    match /customers/{customerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && !isOneOfRoles(['Viewer']);
    }

    match /suppliers/{supplierId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && !isOneOfRoles(['Viewer']);
    }

    match /installation_reports/{reportId} {
        allow read: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Service', 'Viewer']);
        allow write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Service']);
    }
    
    match /demo_machine_factories/{factoryId} {
       allow read: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'DemoManager', 'Viewer']);
       allow write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'DemoManager']);
    }

    match /demo_machines/{machineId} {
       allow read: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'DemoManager', 'Viewer']);
       allow write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'DemoManager']);
    }

    match /demo_machine_applications/{applicationId} {
      allow read: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'DemoManager', 'Viewer']);
      allow write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'DemoManager']);
    }

    match /financial_settings/{docId} {
       allow read: if request.auth != null;
       allow write: if request.auth != null && isAdmin();
    }
    
    match /items/{itemId} {
       allow read: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Store Manager', 'Viewer']);
       allow write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Store Manager']);
    }
    
    match /quote_items/{quoteItemId} {
       allow read: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Store Manager', 'Viewer']);
       allow write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Store Manager']);
    }

    match /sales/{saleId} {
       allow read: if request.auth != null && (isAdmin() || isOneOfRoles(['Store Manager', 'Viewer']));
       allow write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Store Manager']);
    }
    
    match /payments/{paymentId} {
       allow read: if request.auth != null && (isAdmin() || isOneOfRoles(['Store Manager', 'Viewer']));
       allow write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Store Manager']);
    }

    match /quotes/{quoteId} {
      allow read: if request.auth != null && (isAdmin() || isOneOfRoles(['Store Manager', 'Viewer']));
      allow write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Store Manager']);
    }

    match /orders/{orderId} {
      allow read: if request.auth != null && (isAdmin() || isOneOfRoles(['Store Manager', 'Viewer']));
      allow write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Store Manager']);
    }

    match /invoices/{invoiceId} {
      allow read: if request.auth != null && (isAdmin() || isOneOfRoles(['Store Manager', 'Viewer']));
      allow write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Store Manager']);
    }
    
    // Rule to allow transactionally updating document counters
    match /counters/{counterId} {
       allow read, write: if request.auth != null && isOneOfRoles(['Super Admin', 'Admin', 'Store Manager']);
    }
  }
}
