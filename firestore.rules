rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions for roles
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.hasAny(['Super Admin']);
    }
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.hasAny(['Super Admin', 'Admin']);
    }
    function isViewer() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.hasAny(['Viewer']);
    }

    // Users can read their own profile, Admins can read/write all profiles
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if isAdmin();
    }
    
    // Admins can read/write financial settings
    match /financial_settings/{docId} {
      allow read, write: if isAdmin();
    }
    
    // Admins can read/write counters
    match /counters/{docId} {
      allow read, write: if isAdmin();
    }

    // General Collections
    match /{collection}/{docId} {
      // Default deny
      allow read, write: if false;
    }

    // LC Entries: Admins can read/write. Viewers can read.
    match /lc_entries/{lcId} {
      allow read: if isAdmin() || isViewer();
      allow write: if isAdmin();
    }
    
    // Customers: Admins can read/write. Viewers can read.
    match /customers/{customerId} {
      allow read: if isAdmin() || isViewer();
      allow write: if isAdmin();
    }
    
    // Suppliers: Admins can read/write. Viewers can read.
    match /suppliers/{supplierId} {
      allow read: if isAdmin() || isViewer();
      allow write: if isAdmin();
    }

    // Proforma Invoices: Admins can read/write. Viewers can read.
    match /proforma_invoices/{piId} {
        allow read: if isAdmin() || isViewer();
        allow write: if isAdmin();
    }

    // Installation Reports: Admins can read/write. Viewers and Service role can read.
    match /installation_reports/{reportId} {
        allow read: if isAdmin() || isViewer() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.hasAny(['Service']);
        allow write: if isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.hasAny(['Service']);
    }
    
    // Demo Machines & Factories: Admins can read/write. Viewers and DemoManager can read.
    match /demo_machines/{machineId} {
      allow read: if isAdmin() || isViewer() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.hasAny(['DemoManager']);
      allow write: if isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.hasAny(['DemoManager']);
    }
    match /demo_machine_factories/{factoryId} {
      allow read: if isAdmin() || isViewer() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.hasAny(['DemoManager']);
      allow write: if isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.hasAny(['DemoManager']);
    }
     match /demo_machine_applications/{appId} {
      allow read: if isAdmin() || isViewer() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.hasAny(['DemoManager']);
      allow write: if isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.hasAny(['DemoManager']);
    }
    
    // Inventory, Sales, Financials: Admins read/write. Viewers and Store Manager can read.
    function canAccessFinancials() {
        let userRoles = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
        return userRoles.hasAny(['Super Admin', 'Admin', 'Viewer', 'Store Manager']);
    }
    function canWriteFinancials() {
        let userRoles = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
        return userRoles.hasAny(['Super Admin', 'Admin', 'Store Manager']);
    }

    match /items/{itemId} {
        allow read: if canAccessFinancials();
        allow write: if canWriteFinancials();
    }
    match /sales/{saleId} {
        allow read: if canAccessFinancials();
        allow write: if canWriteFinancials();
    }
    match /quotes/{quoteId} {
        allow read: if canAccessFinancials();
        allow write: if canWriteFinancials();
    }
    match /invoices/{invoiceId} {
        allow read: if canAccessFinancials();
        allow write: if canWriteFinancials();
    }
     match /orders/{orderId} {
        allow read: if canAccessFinancials();
        allow write: if canWriteFinancials();
    }
     match /payments/{paymentId} {
        allow read: if canAccessFinancials();
        allow write: if canWriteFinancials();
    }
  }
}
