rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin'];
    }

    // Default deny all reads/writes unless explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read/update their own user document
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow list, create, delete: if isAdmin();
    }
    
    // Customers can be read by any authenticated user, but only modified by admins
    match /customers/{customerId} {
      allow read: if request.auth.uid != null;
      allow create, update, delete: if isAdmin();
    }
    
    // Suppliers can be read by any authenticated user, but only modified by admins
    match /suppliers/{supplierId} {
      allow read: if request.auth.uid != null;
      allow create, update, delete: if isAdmin();
    }

    // Financial settings can only be managed by admins
    match /financial_settings/{docId} {
      allow read, write: if isAdmin();
    }
    
    // Proforma invoices can only be managed by admins
    match /proforma_invoices/{piId} {
        allow read, create, update, delete: if isAdmin();
    }

    // Installation reports can be managed by Admins, Service, and DemoManager roles
    match /installation_reports/{reportId} {
        allow read, create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin', 'Service', 'DemoManager'];
    }

    // Demo machines and factories can be managed by Admins, Service, and DemoManager roles
    match /demo_machines/{machineId} {
        allow read, create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin', 'Service', 'DemoManager'];
    }
    match /demo_machine_factories/{factoryId} {
        allow read, create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin', 'Service', 'DemoManager'];
    }
    match /demo_machine_applications/{applicationId} {
        allow read, create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin', 'Service', 'DemoManager'];
    }

    // LC Entries can only be managed by admins
    match /lc_entries/{lcId} {
        allow read, create, update, delete: if isAdmin();
    }

    // Items can be read by any authenticated user, but only modified by admins and store managers
    match /items/{itemId} {
        allow read: if request.auth.uid != null;
        allow create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin', 'Store Manager'];
    }

    // Quotes can be read by any authenticated user, but only modified by admins and store managers
    match /quotes/{quoteId} {
        allow read, create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin', 'Store Manager'];
    }

    // Invoices and related payments can be read by any authenticated user, but only modified by admins and store managers
    match /invoices/{invoiceId} {
        allow read, create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin', 'Store Manager'];
    }
    match /payments/{paymentId} {
        allow read, create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin', 'Store Manager'];
    }

    // Orders can be read by any authenticated user, but only modified by admins and store managers
    match /orders/{orderId} {
        allow read, create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin', 'Store Manager'];
    }

    // Sales can be read by any authenticated user, but only modified by admins and store managers
    match /sales/{saleId} {
        allow read, create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super Admin', 'Admin', 'Store Manager'];
    }

    // Counters collection is internal and should only be writeable by authenticated users (via transactions)
    match /counters/{counterId} {
        allow read, write: if request.auth.uid != null;
    }
  }
}
